{"version":3,"sources":["components/home/Home.js","services/auth.js","components/signup/Signup.js","components/login/Login.js","components/profile/Profile.js","components/profile/EditProfile.js","components/404/NotFound.js","components/spotify/Spotify.js","components/dashboard/Dashboard.js","components/spotify/Playlist.js","Router.js","serviceWorker.js","index.js"],"names":["Home","className","to","SERVICE","axios","create","baseURL","withCredentials","AUTH_SERVICE","allUsers","users","get","signup","user","post","login","logout","getProfile","editProfile","update","getUser","deleteMI","id","delete","createPost","userPost","editPost","deletePost","addTrack","deleteTrack","getPlaylist","tracks","Signup","state","username","password","name","lastName","componentDidMount","props","match","path","localStorage","history","push","handleInput","e","target","value","setState","onSubmit","a","this","htmlFor","type","onChange","placeholder","required","onClick","Component","Login","key","prevState","data","JSON","stringify","console","log","spotifyWebApi","SpotifyWebApi","Profile","parse","onLogout","clear","token","getHashParams","access_token","setItem","setAccessToken","loggedIn","musicInfluences","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","mainInstrument","img","style","width","height","src","alt","map","musicInf","i","images","length","url","href","EditProfile","friends","handleFile","files","goBack","preventDefault","fd","FormData","append","Object","keys","constructor","userProfile","encType","NotFound","SpotifyLib","getArtist","searchArtists","query","then","artists","items","catch","err","addArtist","artist","genres","artistInfo","Dashboard","filteredUsers","posts","playList","playlist","handlePostInput","deleteAPost","search","toLowerCase","filter","includes","cols","rows","content","_id","Playlist","getTracks","searchTracks","addTracks","track","trackInfo","Router","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d80495d.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"homecard \">\n        <div className=\"mainTitle\">\n      <h1>Indigo</h1>\n        </div>\n        <div className=\"slogan\">\n      <h3>Musicians meeting musicians by their own music taste.</h3>\n        </div>\n        <div className=\"getstarted\">\n      <h5 ><Link to=\"/login\">Get started!</Link></h5>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\n\nconst baseURL = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:3001/api/auth'\nconst SERVICE = axios.create({ baseURL, withCredentials: true });\n\nconst AUTH_SERVICE = {\n  allUsers: (users)=>SERVICE.get('/allUsers', users),\n  signup: (user) => SERVICE.post('/signup', user),\n  login: (user) => SERVICE.post('/login', user),\n  logout: () => SERVICE.get('/logout'),\n  getProfile: (user)=>SERVICE.post('/profile', user),\n  editProfile:(update) => SERVICE.post('/editProfile', update),\n  getUser: () => SERVICE.get('/loggedin'),\n  deleteMI: (id)=>SERVICE.delete(`/deleteMI/${id}`),\n  createPost: (post)=>SERVICE.post('/createPost', post),\n  userPost: (post)=>SERVICE.get('/userPost', post),\n  editPost: (update, id)=>SERVICE.post(`/editPost/${id}`, update),\n  deletePost: (id)=>SERVICE.delete(`/deletePost/${id}`),\n  addTrack: (update)=>SERVICE.post('/addTrack', update),\n  deleteTrack: (id)=>SERVICE.delete(`/deleteTrack/${id}`),\n  getPlaylist: (tracks)=>SERVICE.get('/getPlaylist', tracks)\n};\n\nexport default AUTH_SERVICE;\n","import React, { Component } from 'react'\nimport AUTH_SERVICE from '../../services/auth'\n\nclass Signup extends Component {\n  state = {\n    user: {\n      username: '',\n      password: '',\n      name: '',\n      lastName: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if(this.props.match.path === '/signup' && localStorage.user) this.props.history.push('/profile')\n  }\n\n  handleInput = (e) => {\n    const {user} = this.state\n    const key = e.target.name;\n    user[key] = e.target.value\n\n    this.setState({user})\n  }\n\n  onSubmit = async (e) => {\n    await AUTH_SERVICE.signup(this.state.user)\n    this.props.history.push('/login')\n  }\n\n  render() {\n    const { username, password, name, lastName } = this.state.user\n    return (\n        <div className=\"signup\">\n          <div className=\"signupCard\">\n            <h2>Sign Up</h2>\n            <form  className=\"signupForm\">\n              <div className=\"usernameSign\">\n              <label htmlFor=\"username\">  Username</label>\n              <input className=\"usernameInput\" type=\"text\" name=\"username\" id=\"username\" value={username} onChange={this.handleInput} placeholder=\"Username\" required/>\n              </div>\n              <div className=\"passwordSign\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" name=\"password\" id=\"password\" value={password} onChange={this.handleInput}  placeholder=\"Password\" required/>\n              </div>\n              <div className=\"nameSign\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleInput}  placeholder=\"Name\" required/>                 \n              </div>\n              <div className=\"lastnameSign\">\n              <label htmlFor=\"name\">Last Name</label>\n              <input type=\"text\" name=\"lastName\" id=\"lastName\" value={lastName} onChange={this.handleInput}  placeholder=\"Last name\" required/>                 \n              </div>\n            </form>\n            <div>\n              <button className=\"signUpbutton\" onClick={this.onSubmit} value=\"Submit\">Signup</button>\n            </div>\n            </div>\n          </div>\n        \n    )\n  }\n}\nexport default Signup ","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AUTH_SERVICE from '../../services/auth'\n\nclass Login extends Component {\n  state = {\n    user: {\n      username: '',\n      password: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (localStorage.user) return this.props.history.push('/profile')\n  }\n\n  handleInput = (e) => {\n    const key = e.target.name;\n    const value = e.target.value\n\n    this.setState((prevState) => {\n      const {user} = prevState;\n\n      user[key] = value;\n\n      return { user }\n    })\n  }\n\n  onSubmit = async (e) => {\n    const {data: user} = await AUTH_SERVICE.login(this.state.user)\n    localStorage.user = JSON.stringify(user);\n    console.log(user)\n    this.props.history.push('/dashboard')\n  }\n\n  render() {\n    const { username, password} = this.state.user\n    return (\n      <div className=\"login\">\n        <div className=\"loginCard\">\n          <div className=\"loginForm\">\n              <h1>Welcome to Indigo</h1>\n            <div >\n            <h2>Log in</h2>\n            <form>\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" name=\"username\" id=\"username\" value={username} onChange={this.handleInput} placeholder=\"Username\" required />\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" name=\"password\" id=\"password\" value={password} onChange={this.handleInput} placeholder=\"Password\" required/>\n            </form>\n          </div>\n          <div>\n          <p>If you don't have an account yet, you can create one <Link to=\"/signup\">here</Link></p>\n            <div>\n            <button className=\"loginbutton\"onClick={this.onSubmit}>Log in</button>\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Login","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport AUTH_SERVICE from '../../services/auth'\nimport SpotifyWebApi from 'spotify-web-api-js'\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { faUser, faEnvelope, faLock} from '@fortawesome/free-solid-svg-icons'\nconst spotifyWebApi =  new SpotifyWebApi()\n\nclass Profile extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    let token = params.access_token\n    if (token) {\n      if(!localStorage.token) localStorage.setItem('token', JSON.stringify(token))\n      spotifyWebApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      user:{\n        musicInfluences:[]\n      }\n      \n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n       localStorage.token = hashParams.access_token\n    }\n    return hashParams;\n  }\n\n  componentDidMount = async () => {\n    const {data: user} = await AUTH_SERVICE.getProfile(this.state.user)\n    if(!user) return this.props.history.push('/login')\n    localStorage.user = JSON.stringify(user)\n    this.setState({ user: JSON.parse(localStorage.user) })\n  }\n\n  onLogout = async () => {\n    await AUTH_SERVICE.logout();\n    localStorage.clear()\n    this.props.history.push('/login')\n  }\n\n\n  delete = async (id)=>{\n    await AUTH_SERVICE.deleteMI(id)\n    const {data: user} = await AUTH_SERVICE.getProfile(this.state.user)\n    if(!user) return this.props.history.push('/profile')\n    localStorage.user = JSON.stringify(user)\n    this.setState({ user: JSON.parse(localStorage.user) })\n    console.log(id)\n  }\n\n  render() {\n    const { name, lastName, mainInstrument, img, username, musicInfluences } = this.state.user\n    return (\n      <div className=\"profile\">\n          \n            <h2>Profile</h2>\n            <div className=\"profileImg\">\n              <img style={{width: '300px', height: '300px'}}src={img} alt={username}/>\n            </div>\n            <div>\n            <div className=\"profileUsername\">\n              <h2>Username</h2>\n              <p>{username}</p>\n            </div>\n            <div className=\"profileName\">\n              <h2>Name</h2>\n              <p>{name}</p>\n            </div>\n            <div className=\"profileLastName\">\n              <h2>Last Name</h2>\n              <p>{lastName}</p>\n            </div>\n            <div  className=\"profileMainInstrument\">\n              <h2>Main Instrument</h2>\n              <p>{mainInstrument}</p>\n            </div>\n                <div className=\"logoutButton\">\n            <button onClick={this.onLogout}>Logout</button>\n            </div>\n            </div>\n            <div className=\"profileMusicInfluences\">\n              <h2>Music Influences</h2>\n                <ul>\n                {musicInfluences.map((musicInf, i)=>{\n                  return <li key={i}>{musicInf.name}<img style={{width:'100px'}} alt={musicInf.name} src={musicInf.images.length > 0 ? musicInf.images[0].url: '' }/><button style={{height: '10px'}}id={musicInf.id} onClick={()=>this.delete(musicInf.id)}>Delete</button></li>\n                })}\n              </ul>\n                <Link to=\"/spotify\">Add artist</Link>\n            </div>\n          <div>\n            <div >\n              <Link to=\"/profile/editProfile\">Edit Profile</Link>\n               <br/>\n\n              <br/>\n              <a href=\"http://localhost:8888\">\n                <button>Connect your Spotify account</button>\n              </a>\n              <br/> \n              <br/>\n              <Link to=\"/dashboard\" >Go to dashboard</Link>\n            </div>\n          </div>\n          </div>\n    )\n  }\n}\n\nexport default Profile\n","import React, {Component} from 'react'\nimport AUTH_SERVICE from '../../services/auth';\n\nclass EditProfile extends Component{\n    state={\n        user:{\n            username: '',\n            name: '',\n            lastName: '',\n            mainInstrument: '',\n            friends: '',\n            img: ''\n        }\n    }\n    componentDidMount(){\n        this.setState((prevState)=>{\n            const {user} = prevState\n            const userProfile = JSON.parse(localStorage.user)\n            console.log(userProfile)\n            for(let key in userProfile){\n                if (key!=='img'){\n                    user[key] = userProfile[key]\n                }\n            }\n            return ({user})\n        })\n    }\n\n    handleInput=(e)=>{\n        const key = e.target.name;\n        const value = e.target.value\n        this.setState(prevState => {\n            const {user} = prevState;\n            user[key] = value\n    \n          return { user }\n        })}\n\n    handleFile=(e)=>{\n        this.setState({[e.target.name]: e.target.files[0]})\n    }\n\n    goBack=()=>{\n        this.props.history.push('/profile')\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('img', this.state.img)\n        for(const key in this.state.user){\n            if(key!== 'musicInfluences'){\n                fd.append(key, this.state.user[key])\n            }\n            else if(Object.keys(this.state.user.musicInfluences).length === 0 && this.state.user.musicInfluences.constructor === Object){\n                fd.append(key, this.state.user[key])\n            }\n        }\n        console.log(fd.get('img'))\n        const {data: user} = await AUTH_SERVICE.editProfile(fd)\n        localStorage.user = JSON.stringify(user)\n        this.props.history.push('/profile')\n    }\n    render(){\n        const {username, name, lastName, mainInstrument, img}= this.state.user\n        return(\n            <div className=\"edit\">\n                <div className=\"editForm\">\n                <h1>Update Profile</h1>\n\n                <form encType=\"multipart/form-data\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" value={username} onChange = {this.handleInput}/>\n                    <br/>\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" value={name} onChange={this.handleInput}/>\n                    <br/>\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" value={lastName} onChange={this.handleInput}/>\n                    <br/>\n                    <label htmlFor=\"mainInstrument\">Main Instrument</label>\n                    <input type=\"text\" name=\"mainInstrument\" id=\"mainInstrument\" placeholder=\"Main Instrument\" value={mainInstrument} onChange={this.handleInput}/>\n                    <br/>\n                    <label htmlFor=\"img\">Profile Image</label>\n                    <input name=\"img\" type=\"file\" onChange={this.handleFile}/>\n                   \n                    <br/>\n                    {/* <img style={{width: '200px'}} src={img} alt={username}/> */}\n                </form>\n                <button onClick={this.onSubmit}>Update</button>\n                <button onClick={this.goBack}>Go Back</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditProfile","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from 'react'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport AUTH_SERVICE from '../../services/auth';\n\nconst spotifyWebApi =  new SpotifyWebApi()\n\nclass SpotifyLib extends Component {\n    constructor(){\n        super();\n        const token = localStorage.token;\n        //console.log(token)\n        if (token) {\n          spotifyWebApi.setAccessToken(token);\n        }\n        this.state = {\n          loggedIn: token ? true : false,\n          query: '',\n          artists: [],\n          artistInfo: {\n              name:'',\n              id: '',\n              images: []\n          }\n        }\n      }\n\ngetArtist=()=>{\n    spotifyWebApi.searchArtists(this.state.query)\n    .then(data => {\n      console.log(\"The received data from the API: \", data);\n      this.setState({\n          artists:data.artists.items\n\n              })\n    })\n    .catch(err => {\n      console.log(\"The error while searching artists occurred: \", err);\n    })\n}\n\ngoBack=()=>{\n    this.props.history.push('/profile')\n}\n\naddArtist= (artist)=>{\n    //console.log(artist)\n    const {name, genres, id, images } = artist\n    AUTH_SERVICE.editProfile({musicInfluences: {name, genres, id, images}})\n    this.setState({\n        artistInfo : {name, genres, id, images}\n    })\n    console.log(this.state.artistInfo)\n    \n\n}\n    \n    handleInput=(e)=>{\n        this.setState({\n            query: e.target.value\n        })\n    }\n    render() {\n       //console.log(this.state.artistInfo)\n       // const {name, id, images} = this.state.artistInfo\n    return (\n            <div>\n                <div>\n                    <h1>Search Artist</h1>\n                </div>\n                <input type='search' name='search' value={this.state.query} onChange={this.handleInput} placeholder='Search'/>\n                <button type=\"submit\" value=\"Submit\"  onClick={this.getArtist}>Find</button>\n                <br/>\n                <button type=\"submit\" value=\"Go back\" onClick={this.goBack}>Go Back To Profile</button>\n                    <p>Searched Artists:</p>\n                    <ul>\n                        {this.state.artists.map((artist, i)=>{\n                            return <li key={i}>{artist.name}<img style={{width:'100px'}} alt={artist.name}src={artist.images.length>0 ? artist.images[0].url: '' }/>\n                            <button onClick={() => this.addArtist(artist)}>Add</button></li>\n                        })}\n                    </ul>\n                    \n            </div>\n        )\n    }\n}\n\nexport default SpotifyLib","import React, { Component } from 'react'\nimport AUTH_SERVICE from '../../services/auth'\nimport { Link } from 'react-router-dom'\nclass Dashboard extends Component {\n    state={\n        user: {},\n        users: [],\n        filteredUsers: [],\n        post:{},\n        posts: [],\n        playList:{  \n\n            tracks:[]\n        }\n        \n    }\n\n    componentDidMount=async()=>{\n    const {data: users} = await AUTH_SERVICE.allUsers(this.state.users)\n    localStorage.users = JSON.stringify(users)\n    this.setState({ users: JSON.parse(localStorage.users) })\n    const {data: user} = await AUTH_SERVICE.getProfile(this.state.user)\n    if(!user) return this.props.history.push('/login')\n    localStorage.user = JSON.stringify(user)\n    this.setState({ user: JSON.parse(localStorage.user) })\n    const {data: posts} = await AUTH_SERVICE.userPost(this.state.posts)\n    localStorage.posts = JSON.stringify(posts)\n    this.setState({posts})\n    const {data: tracks} = await AUTH_SERVICE.getPlaylist(this.state.tracks)\n    localStorage.tracks = JSON.stringify(tracks)\n    this.setState({playList:{ tracks}})\n    console.log(tracks.playlist[0].tracks[0].name)\n    console.log(tracks)\n    }\n\n    handlePostInput= (e)=>{\n        const { post } = this.state\n        const key = e.target.name\n        post[key] = e.target.value\n        this.setState({post })\n    }\n\n    delete = async (id)=>{\n        \n        await AUTH_SERVICE.deleteTrack(id)\n      }\n\n\n    createPost = async()=>{\n        console.log(this.state.post)\n        const {data: post} = await AUTH_SERVICE.createPost(this.state.post)\n        localStorage.posts = JSON.parse(localStorage.posts).push(post)\n        this.setState((prevState)=>{\n            const {posts} = prevState\n            posts.push(post)\n            return({posts})\n        })\n    }\n\n    deleteAPost = async(id)=>{\n        await AUTH_SERVICE.deletePost(id)\n        const {data: posts} = await AUTH_SERVICE.userPost(this.state.posts)\n        localStorage.posts = JSON.stringify(posts)\n        this.setState({posts})\n    }\n    search = e => {\n        const { value } = e.target\n        const { users } = this.state\n        const query = value.toLowerCase()\n        const filteredUsers = users.filter((user) =>{\n            for(let i=0; i<user.musicInfluences.length; i++){\n                if(user.musicInfluences[i].genres.includes(query)){\n                    return true\n                }       \n            }\n            return false\n                })\n        console.log('filtered',filteredUsers)\n        this.setState({ filteredUsers })\n      }\n\n    render() {\n        const {filteredUsers, posts} = this.state\n        const {tracks} = this.state.playList\n        const {username} = this.state.user\n        return (\n            <div>\n                <button><Link to=\"/profile\" >Go to profile</Link></button>\n                <Link to=\"/playlist\">Create Playlist</Link>\n                <h1>Welcome {username}</h1>\n                 <input className='input' type='search' name='search' placeholder='Search' onChange={this.search} />\n                {filteredUsers.map((user, i) => (\n                  <p key={i}>{user.name} {user.lastName}</p>\n                    \n                ))}\n                <div>\n                    <h2>Playlist</h2>\n                <ul>\n                {/* {tracks.map((track, i)=>{\n                  return <li key={i}>{track.name}<button id={track.id} onClick={()=>this.delete(track.id)}>Delete</button></li>\n                })} */}\n              </ul></div>\n                <div>\n                <textarea name=\"content\" id=\"post\" cols=\"60\" rows=\"5\" onChange={this.handlePostInput}></textarea>\n                <button onClick={this.createPost}>Submit</button>\n                <button>Edit</button>\n                </div>\n                 <div>\n                    <ul>\n                    {posts.map((post, i)=>{\n                        return <li key={i}>{post.content}<button id={post._id} onClick={()=>this.deleteAPost(post._id)}>Delete</button></li>\n                })}\n                    </ul>\n                </div>  \n            </div>\n        )\n    }\n}\n\nexport default Dashboard\n","import React, { Component } from 'react'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport AUTH_SERVICE from '../../services/auth';\n\nconst spotifyWebApi =  new SpotifyWebApi()\n\nclass Playlist extends Component {\n    constructor(){\n        super();\n        const token = localStorage.token;\n        //console.log(token)\n        if (token) {\n          spotifyWebApi.setAccessToken(token);\n        }\n        this.state = {\n          loggedIn: token ? true : false,\n          query: '',\n          playlist:{},\n          tracks: [],\n          trackInfo: {\n              name:'',\n              id: '',\n              artists: []\n          }\n        }\n      }\n\ngetTracks=()=>{\n    spotifyWebApi.searchTracks(this.state.query)\n    .then(data => {\n      console.log(\"The received data from the API: \", data);\n      this.setState({\n          tracks:data.tracks.items\n\n              })\n    })\n    .catch(err => {\n      console.log(\"The error while searching artists occurred: \", err);\n    })\n}\n\ngoBack=()=>{\n    this.props.history.push('/dashboard')\n}\n\naddTracks= async(track)=>{\n    const {name, id, artists } = track\n    await AUTH_SERVICE.addTrack({tracks: {name, id, artists}})\n    this.setState({\n        trackInfo : {name, artists, id}\n    })\n    const {data: playlist} = await AUTH_SERVICE.getPlaylist(this.state.playlist)\n    localStorage.playlist = JSON.stringify(playlist)\n    this.setState({playlist: JSON.parse(localStorage.playlist)})\n    \n\n}\n    \n    handleInput=(e)=>{\n        this.setState({\n            query: e.target.value\n        })\n    }\n\n\n    render() {\n       //console.log(this.state.artistInfo)\n       // const {name, id, images} = this.state.artistInfo\n    return (\n            <div>\n                <div>\n                    <h1>Search Tracks</h1>\n                </div>\n                <input type='search' name='search' value={this.state.query} onChange={this.handleInput} placeholder='Search'/>\n                <button type=\"submit\" value=\"Submit\"  onClick={this.getTracks}>Find</button>\n                <br/>\n                <button type=\"submit\" value=\"Go back\" onClick={this.goBack}>Go Back To Dashboard</button>\n                    <p>Searched Tracks:</p>\n                    <ul>\n                        {this.state.tracks.map((track, i)=>{\n                            return <li key={i}>{track.name} By {track.artists[0].name}<button onClick={() => this.addTracks(track)}>Add</button></li>\n                        })}\n                    </ul>\n                    \n            </div>\n        )\n    }\n}\n\nexport default Playlist","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './components/home/Home';\nimport Signup from './components/signup/Signup'\nimport Login from './components/login/Login'\nimport Profile from './components/profile/Profile'\nimport EditProfile from './components/profile/EditProfile'\nimport NotFound from './components/404/NotFound.js'\nimport SpotifyLib from './components/spotify/Spotify';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Playlist from './components/spotify/Playlist';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup}/>\n      <Route exact path=\"/profile\" component={Profile} />\n      <Route exact path=\"/spotify\" component={SpotifyLib}/>\n      <Route exact path=\"/dashboard\" component={Dashboard}/>\n      <Route exact path=\"/profile/editProfile\" component={EditProfile} />\n      <Route exact path=\"/playlist\" component={Playlist}/>\n<Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}